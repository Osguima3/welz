name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}

    steps:
      - uses: actions/checkout@v4

      - name: Generate cache key
        id: cache-key
        run: echo "value=${{ runner.os }}-deno-${{ hashFiles('**/deps.ts') }}" >> $GITHUB_OUTPUT

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: ${{ steps.cache-key.outputs.value }}
          restore-keys: ${{ runner.os }}-deno-

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.1.x

      - name: Restore Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Check formatting
        run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Check types
        run: deno task check

  test:
    needs: [setup, build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.1.x

      - name: Restore Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Start database
        run: docker compose up -d db

      - name: Wait for database
        run: timeout 30s bash -c 'until docker compose exec -T db pg_isready; do sleep 1; done'

      - name: Run migrations
        run: deno task backend:migrate

      - name: Run tests
        run: deno task test

      - name: Generate coverage report
        run: deno task coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true

      - name: Stop database
        if: always()
        run: docker compose down
